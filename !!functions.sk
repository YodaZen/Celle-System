options:
    p: &8&l[&b&lCELLE&f&lSYSTEM&8&l] &7>>&f

function yml_replace(type: string,celle: string) :: strings:
    if {_type} = "Type.Unrented":
        set {_lines::*} to yml list "Signs.Unrented" from "Config"
    else:
        set {_lines::*} to yml list "Signs.Rented" from "Config"
    replace all "{ID}" with "%{_celle}%" in {_lines::*}
    replace all "{PRICE}" with "%{Celle::%{_celle}%::Price}%" in {_lines::*}
    replace all "{RENTER}" and "{RENT}" with "%{Celle::%{_celle}%::Owner} parsed as offlineplayer%" in {_lines::*}
    set {_time} to difference between {Celle::%{_celle}%::ExpirationDate} and now
    replace all "{DURATION}" and "{DURA}" with (time({_time},true) ? "0 sekunder") in {_lines::*}
    return {_lines::*}

function celle_rentsign(type: string,loc: location,celle: string):
    if {_type} = "Type.Unrented":
        set {_lines::*} to yml_replace("Type.Unrented",{_celle})
    else:
        set {_lines::*} to yml_replace("Type.Rented",{_celle})
    wait 1 tick
    loop 4 times:
        set line loop-number of block at {_loc} to colored {_lines::%loop-number%}

function celle_info(celle: string, player: player):
    if {CelleRented::%{_celle}%} is set:
        set {_region} to celle_getRegion({_celle},getWGInstance("%world of {Celle::%{_celle}%::Location}%"))
        set {_members::*} to getMembers({_region})
        set {_time} to difference between {Celle::%{_celle}%::ExpirationDate} and now
        message "%nl%&8&m|             &8&l[  &b&lCELLE&f&lSYSTEM  &8&l]&8&m             |%nl%" to {_player}
        message "&8&m [&f   Celle ID: %{_celle} in uppercase%" to {_player}
        message "&8&m [&f   Celle Ejer: %{Celle::%{_celle}%::Owner} parsed as offlineplayer%" to {_player}
        message formatted "&8&m [&f   Celle Lejeperiode: <tooltip:&8[&b&l!&8] &f%time({_time})%>%time({_time},true)% &8[&b&l!&8]<reset>" to {_player}
        if size of {_members::*} > 2:
            message "&8&m [&f   Celle Medlemmer:" to {_player}
        else if size of {_members::*} = 2:
            message "&8&m [&f   Celle Medlem:" to {_player}
        else:
            message "&8&m [&f   Celle Medlemmer: &c(Ingen)" to {_player}
        loop {_members::*}:
            if loop-value != {Celle::%{_celle}%::Owner}:
                message "&8&m [&f      - %loop-value parsed as offlineplayer%" to {_player}
        message formatted "<tooltip:&8&l[&6&l!&8&l]&fInformation:%nl%&fDiscord: YodaZen##5844%nl%&fGithub: https://github.com/YodaZen/Celle-System>%nl%&8&m|     [&f Cellesystem lavet af: YodaZen &8&m]      |%nl%" to {_player}
    else if {Celle::%{_celle}%} is set:
        message "%nl%&8&m|             &8&l[  &b&lCELLE&f&lSYSTEM  &8&l]&8&m             |%nl%" to {_player}
        message "&8&m [&f   Celle Info: Denne celle er ledig!" to {_player}
        message "&8&m [&f   Celle Pris: %{Celle::%{_celle}%::Price}%" to {_player}
        message "&8&m [&f   Celle Permission: %{Celle::%{_celle}%::Permission} ? "&c(Ingen)"%" to {_player}
        set {_locs::*} to split "%{Celle::%{_celle}%::Location}%" at ", "
        message "&8&m [&f   Celle Lokation: %{_locs::1}%, %{_locs::2}%, %{_locs::3}%" to {_player}
        message formatted "<tooltip:&8&l[&6&l!&8&l]&fInformation:%nl%&fDiscord: YodaZen##5844%nl%&fGithub: https://github.com/YodaZen/Celle-System>%nl%&8&m|     [&f Cellesystem lavet af: YodaZen &8&m]      |%nl%" to {_player}
    else:
        message "{@p} &fCellen &b%{_celle}%&f findes ikke! &8[&c✘&8]" to {_player}

function celle_opret(celle: string, price: number, permission: string, player: player):
    set {_loc} to location at {_player}'s targeted block
    set {Celle::%{_celle}%} to {_celle}
    set {Celle::%{_celle}%::Location} to {_loc}
    set {Celle::Locations::%location of {_player}'s targeted block%} to {_celle}
    set {Celle::%{_celle}%::Price} to {_price}
    set {Celle::%{_celle}%::Permission} to {_permission}
    celle_rentsign("Type.Unrented",{_loc},{_celle})
# Opret Region
    set {_instance} to getWGInstance("%{_player}'s world%")
    set {_locs::*} to getWorldEditSelections({_player})
    set {_region} to createCuboidRegion({_locs::1}, {_locs::2}, {_celle}, {_instance})
# Sæt flags og priority
    loop (yml list "Celle.MemberGroups" from "Config"):
        console command "/rg addmember -w ""%{_player}'s world%"" %{_celle}%  g:%loop-value%"
        # addGroup({_region}, loop-value)
    setPriority({_region},10)
    set {_type} to yml value "Celle.FlagGroup" from "Config"
    loop yml list "Celle.Flags" from "Config":
        console command "/rg flag %{_celle}% -w ""%{_player}'s world%"" -g %{_type}% %loop-value%"
    message "{@p} Du har oprettet cellen ved navn &b%{_celle}%!" to {_player}

function celle_fjern(celle: string,player: player):
    if {Celle::%{_celle}%} is set:
        removeRegion({_celle},(getWGInstance("%world of {Celle::%{_celle}%::Location}%")))
        set block at {Celle::%{_celle}%::Location} to air
        wait 1 tick
        delete {Celle::%{Celle::%{_celle}%::Owner}%::Owning::%{_celle}%}
        delete {Celle::Locations::%{Celle::%{_celle}%::Location}%}
        delete {Celle::%{_celle}%}
        delete {Celle::%{_celle}%::*}
        delete {CelleRented::%{_celle}%}
        message "{@p} &fDu har fjernet cellen ved navn &b%{_celle}%!" to {_player}
    else:
        message "{@p} &fEn celle med dette navn findes ikke! &8[&c✘&8]" to {_player}

function celle_unrent(celle: string, player: player):
    set {_region} to celle_getRegion({_celle},getWGInstance("%world of {Celle::%{_celle}%::Location}%"))
    delete {CelleRented::%{_celle}%}
    delete {Celle::%{_celle}%::ExpirationDate}
    delete {Celle::%{Celle::%{_celle}%::Owner}%::Owning::%{_celle}%}
    delete {Celle::%{_celle}%::Owner}
    loop getMembers({_region}):
        removeMember({_region},loop-value)
    celle_rentsign("Type.Unrented",{Celle::%{_celle}%::Location},{_celle})

function celle_Update():
    create section and store it in {_section}:
        loop {Celle::*}:
            if time since {Celle::%loop-value%::ExpirationDate} is set:
                celle_unrent(loop-value,({Celle::%loop-value%::Owner} parsed as offlineplayer))
            else if {CelleRented::%loop-value%} is set:
                celle_rentsign("Type.Rented",{Celle::%loop-value%::Location},loop-value)
    run section {_section} async and wait
    message "[CelleSystem] Cellerne blev opdateret og gemt!" to console